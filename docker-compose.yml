# AI System - Docker Compose Configuration
#
# Conceptual multi-service orchestration
# Demonstrates containerized system architecture

version: '3.8'

services:
  # Main Application - Concept: Core Service
  app:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://user:pass@database:5432/appdb
    depends_on:
      - database
      - cache
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # Database - Concept: Data Persistence
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s

  # Cache - Concept: Performance Layer

  # Vector Store - Concept: AI Data Layer


  # Development - Concept: Development Environment
  dev:
    build:
      context: .
      target: development
    volumes:
      - ./src:/app/src
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
    profiles:
      - dev

  # Training - Concept: ML Training Environment
  training:
    build:
      context: .
      target: gpu-enabled
    runtime: nvidia
    environment:
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - model-data:/app/models
    profiles:
      - training

# Concept: Data Persistence
volumes:
  db-data:
  cache-data:
  vector-data:
  model-data:

# Concept: Network Isolation
networks:
  default:
    name: ai-system-network 